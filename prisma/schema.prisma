generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Type {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String?
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  deleted_at DateTime? @map("deleted_at")
  subType    SubType[]
}

model SubType {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String?
  TypeId     String?    @db.ObjectId
  createdAt  DateTime?  @default(now())
  updatedAt  DateTime?  @updatedAt
  deleted_at DateTime?  @map("deleted_at")
  products   Products[]
  type       Type?      @relation(fields: [TypeId], references: [id])
}

model Products {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  productCode String?
  image       String?
  name        String?
  detail      String?
  subTypeId   String?       @db.ObjectId
  createdAt   DateTime?     @default(now())
  updatedAt   DateTime?     @updatedAt
  deleted_at  DateTime?     @map("deleted_at")
  price       Int?
  subType     SubType?      @relation(fields: [subTypeId], references: [id])
  OrderDetail OrderDetail[]
  qtyRate     QtyRate[]
}

model QtyRate {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  qtyCheck   Int?
  productId  String?     @db.ObjectId
  products   Products?   @relation(fields: [productId], references: [id])
  createdAt  DateTime?   @default(now())
  updatedAt  DateTime?   @updatedAt
  deleted_at DateTime?   @map("deleted_at")
  addOnRate  AddOnRate[]
}

model AddOnRate {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  length     Int?
  addOn      Float?
  qtyRateId  String?   @db.ObjectId
  qtyRate    QtyRate?  @relation(fields: [qtyRateId], references: [id])
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  deleted_at DateTime? @map("deleted_at")
}

model Contact {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  address      String?
  tel          String?
  email        String?
  linkMap      String?
  facebook     String?
  linkFacebook String?
  line         String?
  linkLine     String?
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
  deleted_at   DateTime? @map("deleted_at")
}

model About {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  headtitle    String?
  history      String?
  subhistory   String?
  portfolio    String?
  subportfolio String?
  videotitle   String?
  video        String?
  headpolicy   String?
  subpolicy    String?
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
  deleted_at   DateTime? @map("deleted_at")
}

model Policy {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  headpolicy String?
  subpolicy  String?
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  deleted_at DateTime? @map("deleted_at")
}

model HomeTop {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  title      String?
  subTitle   String?
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  deleted_at DateTime? @map("deleted_at")
}

model Users {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  fname      String?
  lname      String?
  tel        String?
  username   String?
  email      String?
  password   String?
  createdAt  DateTime? @default(now())
  deleted_at DateTime? @map("deleted_at")
  updatedAt  DateTime? @updatedAt
  orders     Orders[]
}

model Orders {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  orderCode   String?
  longitude   Float?
  latitude    Float?
  totalPrice  Int?
  status      String?
  usersId     String?       @db.ObjectId
  users       Users?        @relation(fields: [usersId], references: [id])
  createdAt   DateTime?     @default(now())
  deleted_at  DateTime?     @map("deleted_at")
  updatedAt   DateTime?     @updatedAt
  orderDetail OrderDetail[]
}

model OrderDetail {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  sumPrice  Int?
  sumQty    Int?
  productId String?   @db.ObjectId
  orderId   String?   @db.ObjectId
  orders    Orders?   @relation(fields: [orderId], references: [id])
  products  Products? @relation(fields: [productId], references: [id])
}

model Team {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  fname      String?
  lname      String?
  tel        String?
  email      String?
  username   String?
  password   String?
  userlevel  String?
  teamTypeId String?   @db.ObjectId
  createdAt  DateTime? @default(now())
  deleted_at DateTime? @map("deleted_at")
  updatedAt  DateTime? @updatedAt
  teamType   TeamType? @relation(fields: [teamTypeId], references: [id])
}

model TeamType {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String?
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  deleted_at DateTime? @map("deleted_at")
  Team       Team[]
}